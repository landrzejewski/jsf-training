<?xml version="1.0" encoding="UTF-8"?>
<ui:composition template="/WEB-INF/templates/layout.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:c="http://training.pl/components"
                xmlns:t="http://xmlns.jcp.org/jsf/composite/components">

    <ui:param name="title" value="Shop"/>

    <ui:define name="content">
        <p>Main view (#{userContext.username})</p>

        <h:form>

            <h:selectOneRadio value="#{userContext.active}">
                <f:selectItem itemValue="true" itemLabel="On"/>
                <f:selectItem itemValue="false" itemLabel="Off"/>
                <f:ajax event="change" render="test" execute="@this"/>
                <!--
                    execute - points elements to process (apply request values, process validations, update model, invoke events)
                    render - points elements to render
                -->
            </h:selectOneRadio>

            <h:inputText id="test" value="#{userContext.active}"
                         disabled="#{userContext.active}"
                         styleClass="#{userContext.active ? '' : 'invisible'}"/>
        </h:form>

        <h:form>
            <h:inputText value="#{userContext.username}" onchange="submit()" > <!--valueChangeListener="#{userContext.userChanged}"/>-->
                <f:valueChangeListener type="pl.training.jsf.view.UserChangeListener"/>
            </h:inputText>
          <!--  <h:commandButton action="index" value="Save"/>-->
        </h:form>

        <c:hello name="#{userContext.username}"/>


        <h:form>
            <h:outputLabel for="time:hour" value="Time"/>
            <t:inputLocalTime id="time" value="#{userContext.time}" />
            <h:commandButton value="Submit" action="#{userContext.updateTime}">
                <f:ajax execute="@form" />
            </h:commandButton>
        </h:form>

    </ui:define>

</ui:composition>
